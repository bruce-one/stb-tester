#!/usr/bin/env python

"""
Copyright 2012-2013 YouView TV Ltd.
License: LGPL v2.1 or (at your option) any later version (see
https://github.com/drothlis/stb-tester/blob/master/LICENSE for details).
"""

import stbt

import itertools
import sys


def main(argv):
    parser = stbt.argparser()
    parser.prog = 'stbt record'
    parser.description = 'Create an stb-tester test script'
    parser.add_argument(
        '--control-recorder',
        default=stbt.get_config('record', 'control_recorder'),
        help='The source of remote control keypresses (default: %(default)s)')
    parser.add_argument(
        '-o', '--output-file',
        default=stbt.get_config('record', 'output_file'),
        help='The filename of the generated script (default: %(default)s)')
    args = parser.parse_args(argv[1:])
    stbt.debug("Arguments:\n" + "\n".join([
        "%s: %s" % (k, v) for k, v in args.__dict__.items()]))

    try:
        script = open(args.output_file, 'w')
    except IOError as e:
        e.strerror = "Failed to write to output-file '%s': %s" % (
            args.output_file, e.strerror)
        raise

    try:
        stbt.init_run(args.source_pipeline, args.sink_pipeline, args.control)
        record(stbt.uri_to_remote_recorder(args.control_recorder), script)
    finally:
        stbt.teardown_run()


def record(remote_input, script_out):
    count = itertools.count()
    old_key = None
    script_out.write("import stbt\n\n\n")
    while True:
        interrupt = False
        try:
            key = remote_input.next()
        except (KeyboardInterrupt, StopIteration):
            interrupt = True
        try:
            buf = stbt.get_frame()
            if not interrupt:
                stbt.press(key)
            if old_key:
                filename = '%04d-%s-complete.png' % (count.next(), old_key)
                stbt.save_frame(buf, filename)
                script_out.write("stbt.wait_for_match('%s')\n" % filename)
            if interrupt:
                return
            script_out.write("stbt.press('%s')\n" % key)
        except Exception as e:  # pylint: disable=W0703
            remote_input.throw(e)
        old_key = key


if __name__ == "__main__":
    sys.exit(main(sys.argv))
